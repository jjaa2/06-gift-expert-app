{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAEzBR,GAAc,SAAAS,GAAI,MAAE,CAACP,MACrBC,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,8BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,mGAGJ,mCACTC,EAJa,+DAIQC,UAAUH,GAJlB,6BAGJ,oCAHI,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAOEA,EAAKC,OAPP,uBAOZC,EAPY,EAOZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCV,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAkBvC,OAXAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIjB,CAACpB,IAEGqB,EDjBuBK,CAAc1B,GAAhCa,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdjCgB,EAAgB,WAAO,IAAD,EAEKzC,mBAAS,CAAC,KAFf,mBAExB0C,EAFwB,KAEZ3C,EAFY,KAI/B,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEO2C,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCZzB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.29fb8fa7.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange =(e)=>{\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length >2){\n            //setCategories(cats=>[inputValue,...cats]);\n            setCategories(cats=>[inputValue]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            ></input>\n        </form>\n    );\n\n}\n\nAddCategory.propTypes = {\n    setCategories:PropTypes.func.isRequired\n\n}\n\nexport default AddCategory\n","\n\nexport const getGifs = async(category) => {\n\n    const urlBase = `https://api.giphy.com/v1/gifs/search`;\n    const apiKey = 'ashrfuaHLR0qXnanAxW5Khu9LC2apMv4';\n    const url =`${urlBase}?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n\n}\n","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__zoomIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useFetchGifts} from '../hooks/useFetchGifts';\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images,loading} = useFetchGifts(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>        \n        \n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n        \n            <div className=\"card-grid\">\n\n                {\n                    images.map(img=>(\n                        <GifGridItem key={img.id} {...img}/>\n                    ))\n                }\n\n            </div>\n\n\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\n\n\nexport const useFetchGifts = (category) => {\n\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then(imgs=>{\n            setstate({\n                data:imgs,\n                loading:false\n            })\n        });\n\n    }, [category]);\n\n    return state;\n\n}\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\nexport const GiftExpertApp = () => {\n\n    const [categories, setCategories] = useState(['']);\n\n    return (\n        <>\n        <h2>GiftExpertApp</h2>\n        <AddCategory setCategories={setCategories}/>\n        <hr/>\n\n        <ol>\n            {\n               categories.map(category=>(\n                <GifGrid\n                    key={category}\n                    category={category}\n                />   \n               ))\n            }\n        </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GiftExpertApp} from './GiftExpertApp'\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}